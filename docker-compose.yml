version: "3.7"

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - proxynet
#  db:
#    image: postgres:latest
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: votingdb
#    ports:
#      - "5432:5432"
  voteapp:
    build: ./vote-app
    command: python app.py
    volumes:
      - ./vote-app:/app
    ports:
      - "5001:5001"
    depends_on:
      - redis
    networks:
      - proxynet
#  resutlapp:
#    build: ./result-app
#    command: node server.js
#    ports:
#      - "3001:3001"
#    volumes:
#      - ./result-app:/app
#    environment:
#      DB_SCHEMA: votingdb
#      DB_PASSWORD: postgres
#      DB_USER: postgres
#      DB_HOST: db
#    depends_on:
#      - redis
#      - db
#      - workerapp
#  #      - voteapp
#  #
#  workerapp:
#    build: ./worker-app
#    volumes:
#      - ./worker-app:/app
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db/votingdb
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#      SPRING_REDIS_HOST: redis
#      SPRING_REDIS_PORT: 6379
#    depends_on:
#      - redis
#      - db
  votingui:
    build: ./votingUI
    ports:
      - "4200:4200"
    depends_on:
      - redis
      - voteapp
    networks:
      - proxynet
#
#  resultui:
#    build: ./resultUI
#    environment:
#      name: 'prod'
#    ports:
#      - "4201:4201"
#      #    depends_on:
#      #      - redis
#      #      - db
#      #      - resutlapp

networks:
    proxynet:
      driver: bridge
      
 